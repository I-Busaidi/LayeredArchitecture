// <auto-generated />
using System;
using LayeredArchitecture;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LayeredArchitecture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241126113013_ChangedDatatypesInTransaction")]
    partial class ChangedDatatypesInTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LayeredArchitecture.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("LayeredArchitecture.Models.Transaction", b =>
                {
                    b.Property<int>("transactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transactionId"));

                    b.Property<int>("sourceAccId")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("destinationAccId")
                        .HasColumnType("int");

                    b.Property<string>("opertaion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("transactionId", "sourceAccId");

                    b.HasIndex("destinationAccId");

                    b.HasIndex("sourceAccId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("LayeredArchitecture.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LayeredArchitecture.Models.BankAccount", b =>
                {
                    b.HasOne("LayeredArchitecture.Models.User", "Owner")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("LayeredArchitecture.Models.Transaction", b =>
                {
                    b.HasOne("LayeredArchitecture.Models.BankAccount", "DestinationBA")
                        .WithMany("RecievedTransactions")
                        .HasForeignKey("destinationAccId");

                    b.HasOne("LayeredArchitecture.Models.BankAccount", "SourceBA")
                        .WithMany("Transactions")
                        .HasForeignKey("sourceAccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationBA");

                    b.Navigation("SourceBA");
                });

            modelBuilder.Entity("LayeredArchitecture.Models.BankAccount", b =>
                {
                    b.Navigation("RecievedTransactions");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LayeredArchitecture.Models.User", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
